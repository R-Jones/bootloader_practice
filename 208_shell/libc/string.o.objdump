
string.o:     file format elf32-i386


Disassembly of section .text:

00000000 <int_to_ascii>:
   0:	55                   	push   %ebp
   1:	89 e5                	mov    %esp,%ebp
   3:	53                   	push   %ebx
   4:	83 ec 14             	sub    $0x14,%esp
   7:	8b 45 08             	mov    0x8(%ebp),%eax
   a:	89 45 f0             	mov    %eax,-0x10(%ebp)
   d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
  11:	79 03                	jns    16 <int_to_ascii+0x16>
  13:	f7 5d 08             	negl   0x8(%ebp)
  16:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
  1d:	8b 45 f4             	mov    -0xc(%ebp),%eax
  20:	8d 50 01             	lea    0x1(%eax),%edx
  23:	89 55 f4             	mov    %edx,-0xc(%ebp)
  26:	89 c2                	mov    %eax,%edx
  28:	8b 45 0c             	mov    0xc(%ebp),%eax
  2b:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
  2e:	8b 45 08             	mov    0x8(%ebp),%eax
  31:	bb 0a 00 00 00       	mov    $0xa,%ebx
  36:	99                   	cltd   
  37:	f7 fb                	idiv   %ebx
  39:	89 d0                	mov    %edx,%eax
  3b:	83 c0 30             	add    $0x30,%eax
  3e:	88 01                	mov    %al,(%ecx)
  40:	8b 4d 08             	mov    0x8(%ebp),%ecx
  43:	b8 67 66 66 66       	mov    $0x66666667,%eax
  48:	f7 e9                	imul   %ecx
  4a:	c1 fa 02             	sar    $0x2,%edx
  4d:	89 c8                	mov    %ecx,%eax
  4f:	c1 f8 1f             	sar    $0x1f,%eax
  52:	29 c2                	sub    %eax,%edx
  54:	89 d0                	mov    %edx,%eax
  56:	89 45 08             	mov    %eax,0x8(%ebp)
  59:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
  5d:	7f be                	jg     1d <int_to_ascii+0x1d>
  5f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
  63:	79 13                	jns    78 <int_to_ascii+0x78>
  65:	8b 45 f4             	mov    -0xc(%ebp),%eax
  68:	8d 50 01             	lea    0x1(%eax),%edx
  6b:	89 55 f4             	mov    %edx,-0xc(%ebp)
  6e:	89 c2                	mov    %eax,%edx
  70:	8b 45 0c             	mov    0xc(%ebp),%eax
  73:	01 d0                	add    %edx,%eax
  75:	c6 00 2d             	movb   $0x2d,(%eax)
  78:	8b 55 f4             	mov    -0xc(%ebp),%edx
  7b:	8b 45 0c             	mov    0xc(%ebp),%eax
  7e:	01 d0                	add    %edx,%eax
  80:	c6 00 00             	movb   $0x0,(%eax)
  83:	83 ec 0c             	sub    $0xc,%esp
  86:	ff 75 0c             	push   0xc(%ebp)
  89:	e8 fc ff ff ff       	call   8a <int_to_ascii+0x8a>
  8e:	83 c4 10             	add    $0x10,%esp
  91:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  94:	c9                   	leave  
  95:	c3                   	ret    

00000096 <reverse>:
  96:	55                   	push   %ebp
  97:	89 e5                	mov    %esp,%ebp
  99:	83 ec 18             	sub    $0x18,%esp
  9c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
  a3:	83 ec 0c             	sub    $0xc,%esp
  a6:	ff 75 08             	push   0x8(%ebp)
  a9:	e8 fc ff ff ff       	call   aa <reverse+0x14>
  ae:	83 c4 10             	add    $0x10,%esp
  b1:	48                   	dec    %eax
  b2:	89 45 f0             	mov    %eax,-0x10(%ebp)
  b5:	eb 37                	jmp    ee <reverse+0x58>
  b7:	8b 55 f4             	mov    -0xc(%ebp),%edx
  ba:	8b 45 08             	mov    0x8(%ebp),%eax
  bd:	01 d0                	add    %edx,%eax
  bf:	8a 00                	mov    (%eax),%al
  c1:	0f be c0             	movsbl %al,%eax
  c4:	89 45 ec             	mov    %eax,-0x14(%ebp)
  c7:	8b 55 f4             	mov    -0xc(%ebp),%edx
  ca:	8b 45 08             	mov    0x8(%ebp),%eax
  cd:	01 c2                	add    %eax,%edx
  cf:	8b 4d f0             	mov    -0x10(%ebp),%ecx
  d2:	8b 45 08             	mov    0x8(%ebp),%eax
  d5:	01 c8                	add    %ecx,%eax
  d7:	8a 00                	mov    (%eax),%al
  d9:	88 02                	mov    %al,(%edx)
  db:	8b 55 f0             	mov    -0x10(%ebp),%edx
  de:	8b 45 08             	mov    0x8(%ebp),%eax
  e1:	01 d0                	add    %edx,%eax
  e3:	8b 55 ec             	mov    -0x14(%ebp),%edx
  e6:	88 10                	mov    %dl,(%eax)
  e8:	ff 45 f4             	incl   -0xc(%ebp)
  eb:	ff 4d f0             	decl   -0x10(%ebp)
  ee:	8b 45 f4             	mov    -0xc(%ebp),%eax
  f1:	3b 45 f0             	cmp    -0x10(%ebp),%eax
  f4:	7c c1                	jl     b7 <reverse+0x21>
  f6:	c9                   	leave  
  f7:	c3                   	ret    

000000f8 <strlen>:
  f8:	55                   	push   %ebp
  f9:	89 e5                	mov    %esp,%ebp
  fb:	83 ec 10             	sub    $0x10,%esp
  fe:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 105:	eb 03                	jmp    10a <strlen+0x12>
 107:	ff 45 fc             	incl   -0x4(%ebp)
 10a:	8b 55 fc             	mov    -0x4(%ebp),%edx
 10d:	8b 45 08             	mov    0x8(%ebp),%eax
 110:	01 d0                	add    %edx,%eax
 112:	8a 00                	mov    (%eax),%al
 114:	84 c0                	test   %al,%al
 116:	75 ef                	jne    107 <strlen+0xf>
 118:	8b 45 fc             	mov    -0x4(%ebp),%eax
 11b:	c9                   	leave  
 11c:	c3                   	ret    

0000011d <append>:
 11d:	55                   	push   %ebp
 11e:	89 e5                	mov    %esp,%ebp
 120:	83 ec 14             	sub    $0x14,%esp
 123:	8b 45 0c             	mov    0xc(%ebp),%eax
 126:	88 45 ec             	mov    %al,-0x14(%ebp)
 129:	ff 75 08             	push   0x8(%ebp)
 12c:	e8 fc ff ff ff       	call   12d <append+0x10>
 131:	83 c4 04             	add    $0x4,%esp
 134:	89 45 fc             	mov    %eax,-0x4(%ebp)
 137:	8b 55 fc             	mov    -0x4(%ebp),%edx
 13a:	8b 45 08             	mov    0x8(%ebp),%eax
 13d:	01 c2                	add    %eax,%edx
 13f:	8a 45 ec             	mov    -0x14(%ebp),%al
 142:	88 02                	mov    %al,(%edx)
 144:	8b 45 fc             	mov    -0x4(%ebp),%eax
 147:	8d 50 01             	lea    0x1(%eax),%edx
 14a:	8b 45 08             	mov    0x8(%ebp),%eax
 14d:	01 d0                	add    %edx,%eax
 14f:	c6 00 00             	movb   $0x0,(%eax)
 152:	c9                   	leave  
 153:	c3                   	ret    

00000154 <backspace>:
 154:	55                   	push   %ebp
 155:	89 e5                	mov    %esp,%ebp
 157:	83 ec 10             	sub    $0x10,%esp
 15a:	ff 75 08             	push   0x8(%ebp)
 15d:	e8 fc ff ff ff       	call   15e <backspace+0xa>
 162:	83 c4 04             	add    $0x4,%esp
 165:	89 45 fc             	mov    %eax,-0x4(%ebp)
 168:	8b 45 fc             	mov    -0x4(%ebp),%eax
 16b:	8d 50 ff             	lea    -0x1(%eax),%edx
 16e:	8b 45 08             	mov    0x8(%ebp),%eax
 171:	01 d0                	add    %edx,%eax
 173:	c6 00 00             	movb   $0x0,(%eax)
 176:	c9                   	leave  
 177:	c3                   	ret    

00000178 <strcmp>:
 178:	55                   	push   %ebp
 179:	89 e5                	mov    %esp,%ebp
 17b:	83 ec 10             	sub    $0x10,%esp
 17e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 185:	eb 18                	jmp    19f <strcmp+0x27>
 187:	8b 55 fc             	mov    -0x4(%ebp),%edx
 18a:	8b 45 08             	mov    0x8(%ebp),%eax
 18d:	01 d0                	add    %edx,%eax
 18f:	8a 00                	mov    (%eax),%al
 191:	84 c0                	test   %al,%al
 193:	75 07                	jne    19c <strcmp+0x24>
 195:	b8 00 00 00 00       	mov    $0x0,%eax
 19a:	eb 39                	jmp    1d5 <strcmp+0x5d>
 19c:	ff 45 fc             	incl   -0x4(%ebp)
 19f:	8b 55 fc             	mov    -0x4(%ebp),%edx
 1a2:	8b 45 08             	mov    0x8(%ebp),%eax
 1a5:	01 d0                	add    %edx,%eax
 1a7:	8a 10                	mov    (%eax),%dl
 1a9:	8b 4d fc             	mov    -0x4(%ebp),%ecx
 1ac:	8b 45 0c             	mov    0xc(%ebp),%eax
 1af:	01 c8                	add    %ecx,%eax
 1b1:	8a 00                	mov    (%eax),%al
 1b3:	38 c2                	cmp    %al,%dl
 1b5:	74 d0                	je     187 <strcmp+0xf>
 1b7:	8b 55 fc             	mov    -0x4(%ebp),%edx
 1ba:	8b 45 08             	mov    0x8(%ebp),%eax
 1bd:	01 d0                	add    %edx,%eax
 1bf:	8a 00                	mov    (%eax),%al
 1c1:	0f be d0             	movsbl %al,%edx
 1c4:	8b 4d fc             	mov    -0x4(%ebp),%ecx
 1c7:	8b 45 0c             	mov    0xc(%ebp),%eax
 1ca:	01 c8                	add    %ecx,%eax
 1cc:	8a 00                	mov    (%eax),%al
 1ce:	0f be c0             	movsbl %al,%eax
 1d1:	29 c2                	sub    %eax,%edx
 1d3:	89 d0                	mov    %edx,%eax
 1d5:	c9                   	leave  
 1d6:	c3                   	ret    
