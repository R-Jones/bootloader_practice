
util.o:     file format elf32-i386


Disassembly of section .text:

00000000 <memory_copy>:
   0:	55                   	push   %ebp
   1:	89 e5                	mov    %esp,%ebp
   3:	83 ec 10             	sub    $0x10,%esp
   6:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
   d:	eb 17                	jmp    26 <memory_copy+0x26>
   f:	8b 55 fc             	mov    -0x4(%ebp),%edx
  12:	8b 45 0c             	mov    0xc(%ebp),%eax
  15:	01 c2                	add    %eax,%edx
  17:	8b 4d fc             	mov    -0x4(%ebp),%ecx
  1a:	8b 45 08             	mov    0x8(%ebp),%eax
  1d:	01 c8                	add    %ecx,%eax
  1f:	8a 00                	mov    (%eax),%al
  21:	88 02                	mov    %al,(%edx)
  23:	ff 45 fc             	incl   -0x4(%ebp)
  26:	8b 45 fc             	mov    -0x4(%ebp),%eax
  29:	3b 45 10             	cmp    0x10(%ebp),%eax
  2c:	7c e1                	jl     f <memory_copy+0xf>
  2e:	c9                   	leave  
  2f:	c3                   	ret    

00000030 <memory_set>:
  30:	55                   	push   %ebp
  31:	89 e5                	mov    %esp,%ebp
  33:	83 ec 14             	sub    $0x14,%esp
  36:	8b 45 0c             	mov    0xc(%ebp),%eax
  39:	88 45 ec             	mov    %al,-0x14(%ebp)
  3c:	8b 45 08             	mov    0x8(%ebp),%eax
  3f:	89 45 fc             	mov    %eax,-0x4(%ebp)
  42:	eb 11                	jmp    55 <memory_set+0x25>
  44:	8b 45 fc             	mov    -0x4(%ebp),%eax
  47:	8d 50 01             	lea    0x1(%eax),%edx
  4a:	89 55 fc             	mov    %edx,-0x4(%ebp)
  4d:	8a 55 ec             	mov    -0x14(%ebp),%dl
  50:	88 10                	mov    %dl,(%eax)
  52:	ff 4d 10             	decl   0x10(%ebp)
  55:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
  59:	75 e9                	jne    44 <memory_set+0x14>
  5b:	c9                   	leave  
  5c:	c3                   	ret    

0000005d <int_to_ascii>:
  5d:	55                   	push   %ebp
  5e:	89 e5                	mov    %esp,%ebp
  60:	53                   	push   %ebx
  61:	83 ec 14             	sub    $0x14,%esp
  64:	8b 45 08             	mov    0x8(%ebp),%eax
  67:	89 45 f0             	mov    %eax,-0x10(%ebp)
  6a:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
  6e:	79 03                	jns    73 <int_to_ascii+0x16>
  70:	f7 5d 08             	negl   0x8(%ebp)
  73:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
  7a:	8b 45 f4             	mov    -0xc(%ebp),%eax
  7d:	8d 50 01             	lea    0x1(%eax),%edx
  80:	89 55 f4             	mov    %edx,-0xc(%ebp)
  83:	89 c2                	mov    %eax,%edx
  85:	8b 45 0c             	mov    0xc(%ebp),%eax
  88:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
  8b:	8b 45 08             	mov    0x8(%ebp),%eax
  8e:	bb 0a 00 00 00       	mov    $0xa,%ebx
  93:	99                   	cltd   
  94:	f7 fb                	idiv   %ebx
  96:	89 d0                	mov    %edx,%eax
  98:	83 c0 30             	add    $0x30,%eax
  9b:	88 01                	mov    %al,(%ecx)
  9d:	8b 4d 08             	mov    0x8(%ebp),%ecx
  a0:	b8 67 66 66 66       	mov    $0x66666667,%eax
  a5:	f7 e9                	imul   %ecx
  a7:	c1 fa 02             	sar    $0x2,%edx
  aa:	89 c8                	mov    %ecx,%eax
  ac:	c1 f8 1f             	sar    $0x1f,%eax
  af:	29 c2                	sub    %eax,%edx
  b1:	89 d0                	mov    %edx,%eax
  b3:	89 45 08             	mov    %eax,0x8(%ebp)
  b6:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
  ba:	7f be                	jg     7a <int_to_ascii+0x1d>
  bc:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
  c0:	79 13                	jns    d5 <int_to_ascii+0x78>
  c2:	8b 45 f4             	mov    -0xc(%ebp),%eax
  c5:	8d 50 01             	lea    0x1(%eax),%edx
  c8:	89 55 f4             	mov    %edx,-0xc(%ebp)
  cb:	89 c2                	mov    %eax,%edx
  cd:	8b 45 0c             	mov    0xc(%ebp),%eax
  d0:	01 d0                	add    %edx,%eax
  d2:	c6 00 2d             	movb   $0x2d,(%eax)
  d5:	8b 55 f4             	mov    -0xc(%ebp),%edx
  d8:	8b 45 0c             	mov    0xc(%ebp),%eax
  db:	01 d0                	add    %edx,%eax
  dd:	c6 00 00             	movb   $0x0,(%eax)
  e0:	83 ec 0c             	sub    $0xc,%esp
  e3:	ff 75 0c             	push   0xc(%ebp)
  e6:	e8 fc ff ff ff       	call   e7 <int_to_ascii+0x8a>
  eb:	83 c4 10             	add    $0x10,%esp
  ee:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  f1:	c9                   	leave  
  f2:	c3                   	ret    

000000f3 <reverse>:
  f3:	55                   	push   %ebp
  f4:	89 e5                	mov    %esp,%ebp
  f6:	83 ec 18             	sub    $0x18,%esp
  f9:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 100:	83 ec 0c             	sub    $0xc,%esp
 103:	ff 75 08             	push   0x8(%ebp)
 106:	e8 fc ff ff ff       	call   107 <reverse+0x14>
 10b:	83 c4 10             	add    $0x10,%esp
 10e:	48                   	dec    %eax
 10f:	89 45 f0             	mov    %eax,-0x10(%ebp)
 112:	eb 37                	jmp    14b <reverse+0x58>
 114:	8b 55 f4             	mov    -0xc(%ebp),%edx
 117:	8b 45 08             	mov    0x8(%ebp),%eax
 11a:	01 d0                	add    %edx,%eax
 11c:	8a 00                	mov    (%eax),%al
 11e:	0f be c0             	movsbl %al,%eax
 121:	89 45 ec             	mov    %eax,-0x14(%ebp)
 124:	8b 55 f4             	mov    -0xc(%ebp),%edx
 127:	8b 45 08             	mov    0x8(%ebp),%eax
 12a:	01 c2                	add    %eax,%edx
 12c:	8b 4d f0             	mov    -0x10(%ebp),%ecx
 12f:	8b 45 08             	mov    0x8(%ebp),%eax
 132:	01 c8                	add    %ecx,%eax
 134:	8a 00                	mov    (%eax),%al
 136:	88 02                	mov    %al,(%edx)
 138:	8b 55 f0             	mov    -0x10(%ebp),%edx
 13b:	8b 45 08             	mov    0x8(%ebp),%eax
 13e:	01 d0                	add    %edx,%eax
 140:	8b 55 ec             	mov    -0x14(%ebp),%edx
 143:	88 10                	mov    %dl,(%eax)
 145:	ff 45 f4             	incl   -0xc(%ebp)
 148:	ff 4d f0             	decl   -0x10(%ebp)
 14b:	8b 45 f4             	mov    -0xc(%ebp),%eax
 14e:	3b 45 f0             	cmp    -0x10(%ebp),%eax
 151:	7c c1                	jl     114 <reverse+0x21>
 153:	c9                   	leave  
 154:	c3                   	ret    

00000155 <strlen>:
 155:	55                   	push   %ebp
 156:	89 e5                	mov    %esp,%ebp
 158:	83 ec 10             	sub    $0x10,%esp
 15b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 162:	eb 03                	jmp    167 <strlen+0x12>
 164:	ff 45 fc             	incl   -0x4(%ebp)
 167:	8b 55 fc             	mov    -0x4(%ebp),%edx
 16a:	8b 45 08             	mov    0x8(%ebp),%eax
 16d:	01 d0                	add    %edx,%eax
 16f:	8a 00                	mov    (%eax),%al
 171:	84 c0                	test   %al,%al
 173:	75 ef                	jne    164 <strlen+0xf>
 175:	8b 45 fc             	mov    -0x4(%ebp),%eax
 178:	c9                   	leave  
 179:	c3                   	ret    
